// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String
  password String
  roles    String

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())

  @@map("users")
}

model Championship {
  id   String @id @default(uuid())
  name String
  type String

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  team       Team      @relation(fields: [team_id], references: [id])
  team_id    String    @unique

  @@map("Championships")
}

model Team {
  id   String @id @default(uuid())
  name String

  created_at    DateTime?       @default(now())
  update_at     DateTime?       @default(now())
  championship  Championship[] // 1 team pode est√° em varios campeonatos
  coachingStaff CoachingStaff[]
  coach         Coach?
  player        Player[]

  @@map("Teams")
}

model Player {
  id          String @id @default(uuid())
  name        String
  age         String
  nationality String

  created_at       DateTime?         @default(now())
  update_at        DateTime?         @default(now())
  statisticsPlayer StatisticsPlayer?

  team    Team   @relation(fields: [team_id], references: [id])
  team_id String @unique

  @@map("Players")
}

model StatisticsPlayer {
  id          String @id @default(uuid())
  namePlayer  String
  yellowCards String
  redCards    String
  games       String
  goals       String

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  player     Player    @relation(fields: [player_id], references: [id])
  player_id  String    @unique

  @@map("StatisticsPlayers")
}

model CoachingStaff {
  id          String @id @default(uuid())
  name        String
  age         String
  nationality String
  role        String

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  team       Team      @relation(fields: [team_id], references: [id])
  team_id    String    @unique
  coach      Coach     @relation(fields: [coach_id], references: [id])
  coach_id   String    @unique

  @@map("CoachingStaffs")
}

model Coach {
  id          String @id @default(uuid())
  name        String
  age         String
  nationality String
  role        String

  created_at DateTime? @default(now())
  update_at  DateTime? @default(now())
  team       Team      @relation(fields: [team_id], references: [id])
  team_id    String    @unique

  coachingStaff CoachingStaff[]

  @@map("Coachs")
}
